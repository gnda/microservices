version: "3.8"
services:

# Adminer to manage databases

  adminer:
    image: adminer:latest
    ports:
      - 8080:8080
    networks:
      - db

# Front microservice

  web_back:
    build:
      context:  ./docker/front/
      dockerfile: Dockerfile.node
    entrypoint: "ng serve --host 0.0.0.0 --port 5000 --disableHostCheck"
    volumes:
      - ${PWD}/volumes/front:/usr/src/app
    networks:
      - web
      - inventory

  web_proxy:
    build:
      context:  ./docker/front/
      dockerfile: Dockerfile.nginx
    depends_on:
      - web_back
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - web

# Inventory microservice

  inventory_back:
    build:
      context: ./docker/back/
      dockerfile: Dockerfile.python
    depends_on:
      - inventory_db
    entrypoint: python3 /opt/app/app.py
    volumes:
      - ${PWD}/volumes/back/inventory:/opt/app
      - /etc/localtime:/etc/localtime:ro
    working_dir: /opt/app
    networks:
      - inventory

  inventory_db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: ${INVENTORY_DB_NAME}
      MYSQL_USER: ${INVENTORY_DB_USER}
      MYSQL_ROOT_PASSWORD: ${INVENTORY_DB_PASSWORD}
      MYSQL_PASSWORD: ${INVENTORY_DB_PASSWORD}
    volumes:
      - ${PWD}/volumes/db/inventory_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    networks:
      - db
      - inventory

networks:
  db:
    name: db
  inventory:
    name: inventory
  web:
    name: web