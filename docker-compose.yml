version: "3.9"
services:

# Self-signed certs generation service for local development

  certs:
    extends:
      file: admin.yml
      service: certs

# Traefik service

  traefik:
    extends:
      file: admin.yml
      service: traefik

# Adminer to manage databases

  adminer:
    extends:
      file: admin.yml
      service: adminer

# Front microservice

  front:
    extends:
      file: web.yml
      service: front

  #web_proxy:
  #  build:
  #    context:  ./docker/front/
  #    dockerfile: Dockerfile.nginx
  #  depends_on:
  #    - web_back
  #  volumes:
  #    - ./.volumes/config/certs:/etc/certs
  #    - /etc/localtime:/etc/localtime:ro
  #  networks:
  #    - web
  #    - authentication
  #    - cart
  #    - inventory
  #    - order
  #    - search
  #  labels:
  #    traefik.enable: true
  #    traefik.http.routers.proxy.entrypoints: "websecure"
  #    traefik.http.routers.proxy.rule: "Host(`localhost`)"
  #    traefik.http.routers.proxy.middlewares: "security@file, compression@file"
  #    traefik.http.routers.proxy.tls: "true"
  #    traefik.docker.network: "proxy"

# Authentication microservice

  authentication_back:
    depends_on:
      - authentication_db
    extends:
      file: web.yml
      service: back
    env_file:
      - '.env/authentication.env'
    volumes:
      - ./volumes/back/authentication:/opt/app
    networks:
      - authentication
    labels:
      traefik.http.routers.authentication.rule: "Host(`authentication.localhost`)"
      traefik.http.routers.authentication.entrypoints: "websecure"
      traefik.http.routers.authentication.middlewares: "security@file, compression@file"
      traefik.http.routers.authentication.tls: "true"

  authentication_db:
    extends:
      file: web.yml
      service: db
    env_file:
      - '.env/authentication.env'
    volumes:
      - ./volumes/db/authentication_data:/var/lib/mysql
    networks:
      - authentication

# Inventory microservice

  inventory_back:
    depends_on:
      - inventory_db
    extends:
      file: web.yml
      service: back
    env_file:
      - '.env/inventory.env'
    volumes:
      - ./volumes/back/inventory:/opt/app
    networks:
      - inventory
    labels:
      traefik.http.routers.inventory.rule: "Host(`inventory.localhost`)"
      traefik.http.routers.inventory.entrypoints: "websecure"
      traefik.http.routers.inventory.middlewares: "security@file, compression@file"
      traefik.http.routers.inventory.tls: "true"

  inventory_db:
    extends:
      file: web.yml
      service: db
    env_file:
      - '.env/inventory.env'
    volumes:
      - ./volumes/db/inventory_data:/var/lib/mysql
    networks:
      - inventory

# Order microservice

  order_back:
    depends_on:
      - order_db
    extends:
      file: web.yml
      service: back
    env_file:
      - '.env/order.env'
    volumes:
      - ./volumes/back/order:/opt/app
    networks:
      - order
    labels:
      traefik.http.routers.order.rule: "Host(`order.localhost`)"
      traefik.http.routers.order.entrypoints: "websecure"
      traefik.http.routers.order.middlewares: "security@file, compression@file"
      traefik.http.routers.order.tls: "true"

  order_db:
    extends:
      file: web.yml
      service: db
    env_file:
      - '.env/order.env'
    volumes:
      - ./volumes/db/order_data:/var/lib/mysql
    networks:
      - order

# Cart microservice

  cart_back:
    depends_on:
      - cart_db
    extends:
      file: web.yml
      service: back
    env_file:
      - '.env/cart.env'
    volumes:
      - ./volumes/back/cart:/opt/app
    networks:
      - cart
    labels:
      traefik.http.routers.cart.rule: "Host(`cart.localhost`)"
      traefik.http.routers.cart.entrypoints: "websecure"
      traefik.http.routers.cart.middlewares: "security@file, compression@file"
      traefik.http.routers.cart.tls: "true"

  cart_db:
    extends:
      file: web.yml
      service: db
    env_file:
      - '.env/cart.env'
    volumes:
      - ./volumes/db/cart_data:/var/lib/mysql
    networks:
      - cart

# Search microservice

  search_back:
    depends_on:
      - search_db
    extends:
      file: web.yml
      service: back
    env_file:
      - '.env/search.env'
    volumes:
      - ./volumes/back/search:/opt/app
    networks:
      - search
    labels:
      traefik.http.routers.search.rule: "Host(`search.localhost`)"
      traefik.http.routers.search.entrypoints: "websecure"
      traefik.http.routers.search.middlewares: "security@file, compression@file"
      traefik.http.routers.search.tls: "true"

  search_db:
    extends:
      file: web.yml
      service: db
    env_file:
      - '.env/search.env'
    volumes:
      - ./volumes/db/search_data:/var/lib/mysql
    networks:
      - search

networks:
  db:
    name: db
  authentication:
    name: authentication
  cart:
    name: cart
  inventory:
    name: inventory
  order:
    name: order
  search:
    name: search
  proxy:
    name: proxy